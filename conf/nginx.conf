worker_processes 1;
pid /var/run/openresty.pid;

events {
    worker_connections 1024;
}

http {
    lua_shared_dict my_sessions 10m;

    server {
        listen 80;

        location /login {
            set $session_key "";
            if ($cookie_session_id) {
                set $session_key $cookie_session_id;
            }

            content_by_lua_block {
                local login = require "login"
                local session = require "session"

                -- Initialize the login module with database connection details
                login.init("dbname=mydb user=myuser password=mypass host=localhost")

                -- Authenticate user
                local success, user, err = login.authenticate(ngx.var.http_authorization)

                -- If authentication is successful, create a session
                if success then
                    local session_id, err = session.create("my_sessions", user)
                    if not session_id then
                        ngx.say("Failed to create session: ", err)
                        return
                    end

                    -- Set session cookie
                    ngx.header["Set-Cookie"] = "session_id=" .. session_id .. "; Path=/; HttpOnly"
                end

                -- Respond based on authentication result
                if success then
                    ngx.say("User authenticated successfully.")
                else
                    ngx.status = 401
                    ngx.header["WWW-Authenticate"] = "Basic realm=\"Lua RESTy API\""
                    ngx.say("Unauthorized")
                end
            }
        }

        location /session {
            set $session_key "";
            if ($cookie_session_id) {
                set $session_key $cookie_session_id;
            }

            content_by_lua_block {
                local session = require "session"
                local user, err = session.get("my_sessions", ngx.var.session_id)
                if not user then
                    ngx.say("Invalid session.")
                    return
                end

                ngx.say("Hello, " .. user .. "! Your session is valid.")
            }
        }

        location / {
            return 404;
        }
    }
}
